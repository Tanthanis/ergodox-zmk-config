#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                layer_0 {
                        bindings = <
    &bootloader
    &kp ESC    &kp N1     &kp N2     &kp N3     &kp N4     &kp N5     &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &kp MINUS  &kp EQUAL  &kp INS
    &kp TAB    &kp Q      &kp W      &kp E      &kp R      &kp T      &tog 1     &tog 2     &kp Y      &kp U      &kp I      &kp O      &kp P      &kp BSLH
    &kp CAPS   &kp A      &kp S      &kp D      &kp F      &kp G                            &kp H      &kp J      &kp K      &kp L      &kp SCLN   &kp APOS
    &kp LSHIFT &kp Z      &kp X      &kp C      &kp V      &kp B      &mo 1      &mo 1      &kp N      &kp M      &kp CMMA   &kp DOT    &kp FSLH   &kp RSHIFT
    &kp LCTRL  &kp LWIN   &kp LALT   &kp GRAVE  &kp DEL                                                &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp RWIN
                                                           &kp LBKT   &kp RBKT   &kp RALT   &kp RCTRL
                                                                      &kp HOME   &kp PGUP
                                                &kp SPC    &kp BSPC                         &kp ENTER  &kp SPC
                                                                      &kp END    &kp PGDN
                        >;
                };

                layer_1 {
                        bindings = <
    &bootloader
    &trans     &kp F1     &kp F2     &kp F3     &kp F4     &kp F5     &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &kp F11    &kp F12    &trans
    &trans     &trans     &trans     &trans     &trans     &trans     &tog 1     &tog 2     &trans     &trans     &trans     &trans     &trans     &trans
    &trans     &trans     &trans     &trans     &trans     &trans                           &trans     &trans     &trans     &trans     &trans     &trans
    &trans     &trans     &trans     &trans     &trans     &trans     &mo 1      &mo 1      &trans     &trans     &trans     &trans     &trans     &trans
    &trans     &trans     &trans     &trans     &trans                                                 &trans     &trans     &trans     &trans     &trans
                                                           &trans     &trans     &trans     &trans
                                                                      &trans     &trans
                                                &trans     &kp DEL                          &trans     &trans
                                                                      &kp ENTER  &trans
                        >;
                };

                layer_2 {
                        bindings = <
    &bootloader
    &none      &none      &none      &none      &none      &none      &none      &none      &none           &kp KP_NUM &kp KP_DIVIDE &kp KP_MULTIPLY &kp KP_MINUS &bt BT_SEL 0
    &none      &none      &none      &none      &none      &none      &none      &tog 2     &kp PSCRN       &kp KP_N7  &kp KP_N8     &kp KP_N9       &kp KP_PLUS  &bt BT_SEL 1
    &none      &none      &none      &none      &none      &none                            &kp PAUSE_BREAK &kp KP_N4  &kp KP_N5     &kp KP_N6       &kp KP_PLUS  &bt BT_SEL 2
    &none      &none      &none      &none      &none      &none      &none      &none      &kp SLCK        &kp KP_N1  &kp KP_N2     &kp KP_N3       &kp KP_ENTER &bt BT_SEL 3
    &none      &none      &none      &none      &none                                                       &kp KP_N0  &kp KP_N0     &kp DOT         &kp KP_ENTER &bt BT_SEL 4
                                                           &none      &none      &none      &none
                                                                      &none      &out OUT_USB
                                                &none      &none                            &bt BT_CLR      &out OUT_TOG
                                                                      &none      &out OUT_BLE
                        >;
                };

        };
};
